Python 2.7.9 (default, Dec 10 2014, 12:24:55) [MSC v.1500 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> s3.Object('awsgluepythonbucket6r', 'test3.json').put(Body=open('D:\SampleJson\test3.json','rb'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 's3' is not defined
>>> import boto3
>>> s3 = boto3.resource('s3')
>>>
>>>
>>> s3.Object('awsgluepythonbucket6r', 'test3.json').put(Body=open('D:\SampleJson\test3.json','rb'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IOError: [Errno 22] invalid mode ('rb') or filename: 'D:\\SampleJson\test3.json'
>>> s3.Object('awsgluepythonbucket6r', 'test3.json').put(Body=open('D:/SampleJson/test3.json','rb'))
{u'ETag': '"ab9b7b2c58d3a481e172aea95b1e87a0"', 'ResponseMetadata': {'HTTPStatusCode': 200, 'RetryAttempts': 3, 'HostId': '5wv5uZlQ+TP9ZciRft1P1JDwb0sEbX8bSGTqhp7njJrt/tt28hrGXdMRihjiRWxGpw60FaocL6c=', 'RequestId': 'C2784F2E83CE3A38', 'HTTPHeaders': {'content-length': '0', 'x-amz-id-2': '5wv5uZlQ+TP9ZciRft1P1JDwb0sEbX8bSGTqhp7njJrt/tt28hrGXdMRihjiRWxGpw60FaocL6c=', 'server': 'AmazonS3', 'x-amz-request-id': 'C2784F2E83CE3A38', 'etag': '"ab9b7b2c58d3a481e172aea95b1e87a0"', 'date': 'Mon, 28 Jan 2019 12:06:15 GMT'}}}
>>> s3.Object('awsgluepythonbucket6r', 'test4.json').put(Body=open('D:/SampleJson/test4.json','rb'))
{u'ETag': '"3824255c0a9fb7629672f421e1fdc1f5"', 'ResponseMetadata': {'HTTPStatusCode': 200, 'RetryAttempts': 4, 'HostId': 'S0KASctvW5m5HDweGl9m1ZIyTLritxdICOYe84V6tCkL2aqntkuouqQrZ8Nd9rFW9qNJpaKq65g=', 'RequestId': '2766A29A2BD3A2C5', 'HTTPHeaders': {'content-length': '0', 'x-amz-id-2': 'S0KASctvW5m5HDweGl9m1ZIyTLritxdICOYe84V6tCkL2aqntkuouqQrZ8Nd9rFW9qNJpaKq65g=', 'server': 'AmazonS3', 'x-amz-request-id': '2766A29A2BD3A2C5', 'etag': '"3824255c0a9fb7629672f421e1fdc1f5"', 'date': 'Mon, 28 Jan 2019 12:07:57 GMT'}}}
>>> client = boto3.client('glue')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Python27\lib\site-packages\boto3\__init__.py", line 91, in client
    return _get_default_session().client(*args, **kwargs)
  File "C:\Python27\lib\site-packages\boto3\session.py", line 263, in client
    aws_session_token=aws_session_token, config=config)
  File "C:\Python27\lib\site-packages\botocore\session.py", line 838, in create_client
    client_config=config, api_version=api_version)
  File "C:\Python27\lib\site-packages\botocore\client.py", line 86, in create_client
    verify, credentials, scoped_config, client_config, endpoint_bridge)
  File "C:\Python27\lib\site-packages\botocore\client.py", line 328, in _get_client_args
    verify, credentials, scoped_config, client_config, endpoint_bridge)
  File "C:\Python27\lib\site-packages\botocore\args.py", line 47, in get_client_args
    endpoint_url, is_secure, scoped_config)
  File "C:\Python27\lib\site-packages\botocore\args.py", line 117, in compute_client_args
    service_name, region_name, endpoint_url, is_secure)
  File "C:\Python27\lib\site-packages\botocore\client.py", line 402, in resolve
    service_name, region_name)
  File "C:\Python27\lib\site-packages\botocore\regions.py", line 122, in construct_endpoint
    partition, service_name, region_name)
  File "C:\Python27\lib\site-packages\botocore\regions.py", line 135, in _endpoint_for_partition
    raise NoRegionError()
botocore.exceptions.NoRegionError: You must specify a region.
>>> client = boto3.client('glue','us-east-1')
>>> glue = boto3.client(service_name='glue', region_name='us-east-1')
>>> response = client.create_classifier(JsonClassifier={'Name': 'democlassifier','JsonPath': '$[*]'})
